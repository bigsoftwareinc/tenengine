server {
	server_name workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:8094/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name thtam09.vn;
	listen 443 ssl;
	root /usr/share/nginx/html/thtam09;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/thtam09.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/thtam09.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location = /error.html {
		root /usr/share/nginx/html/thtam09;
		internal;
	}

}

server {
	server_name thtam09.com;
	listen 443 ssl;
	root /usr/share/nginx/html/owned;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/thtam09.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/thtam09.com/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		index index.htm index.html;
	}

	location = /error.html {
		root /usr/share/nginx/html/owned;
		internal;
	}

}

server {
	server_name portainer.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/portainer.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/portainer.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass https://103.173.154.89:9443/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name blogs.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/blogs.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/blogs.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:8117/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name uptime.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/uptime.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/uptime.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:8125/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name gitea.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	client_max_body_size 300M;
	ssl_certificate /etc/letsencrypt/live/gitea.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/gitea.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:8108/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name code.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/code.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/code.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:8101/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name app.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/app.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/app.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://103.173.154.89:4749/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name sync.workflows.vn;
	listen 443 ssl;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/sync.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/sync.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass https://103.173.154.89:8090/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

server {
	server_name home.workflows.vn;
	listen 443 ssl;
	client_max_body_size 1000000M;
	ssl_certificate /etc/letsencrypt/live/home.workflows.vn/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/home.workflows.vn/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		proxy_pass http://nas_teramaster;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Content-Security-Policy "upgrade-insecure-requests";
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host $host;
	}

}

server {
	server_name mymoment.cloud;
	listen 443 ssl http2;
	root /usr/share/nginx/html;
	error_page 404 403 500 503 /error.html;
	ssl_certificate /etc/letsencrypt/live/mymoment.cloud/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/mymoment.cloud/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		client_max_body_size    5m;
		proxy_pass http://localhost:9000/;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}
	}

	location = /error.html {
		root /usr/share/nginx/html;
		internal;
	}

}

